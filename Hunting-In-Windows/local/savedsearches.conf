[T1117 - Execution/Defense Evasion - Regsvr32]
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */15 * * * *
description = Adversaries may take advantage of regsvr32's functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of whitelists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe is also a Microsoft signed binary.\
\
https://attack.mitre.org/wiki/Technique/T1117
display.events.fields = ["host","source","sourcetype","EventCode"]
display.events.type = raw
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_with_winevents
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new index=wineventlog NewProcessName="C:\\Windows\\System32\\regsvr32.exe" CommandLine="regsvr32.exe  /s /u /i:* scrobj.dll"\
| rex field=CommandLine "i:(?<Resource>.*)\s"\
| eval Severity=if(match(CommandLine,"http"),"Critical","Medium") \
| eval Category=mvappend("Execution", "Defense Evasion") \
| eval Technique="T1156"\
| table _time HostName UserName CommandLine Resource Severity Category Technique

[T1170 - Execution/Defense Evasion - mshts]
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */15 * * * *
description = Adversaries can use mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code
display.events.fields = ["host","source","sourcetype","EventCode"]
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_with_winevents
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new index=wineventlog CommandLine="mshta*" \
| rex field=CommandLine "mshta\s(?<Resource>.*)"\
| rex field=CommandLine ".*script:(?<Resource>.*)\"" \
| eval Resource=rtrim(Resource, "\"\"\)") \
| eval Severity=if(match(CommandLine,"http"),"Critical","Medium") \
| eval Category=mvappend("Execution", "Defense Evasion") \
| eval Technique="T1170"\
| table _time HostName UserName CommandLine Resource Severity

[T1064 - Execution/Defense Evasion - Office spawning scritp]
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */15 * * * *
description = Scripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macos being allowed or that the user will accept to activate them.\
\
https://attack.mitre.org/wiki/Technique/T1064
display.events.fields = ["EventCode","subject","DestAddress"]
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = index=* eventtype=hunting_windows_* (ParentProcessName="*WINWORD.EXE" OR ParentProcessName="*EXCEL.EXE" OR ParentProcessName="*POWERPOINT.EXE") (NewProcessName="*powershell.exe" OR NewProcessName="*cmd.exe" OR NewProcessName="*wscript.exe" OR NewProcessName="*cscritp.exe")\
| rex field=CommandLine "powershell.exe\s(?<Resource>.*)"\
| eval Severity=if(like(Resource, "%http%"), "Critical", "Low")\
| eval Category=mvappend("Execution", "Defense Evasion") \
| eval Technique="T1064"\
| table _time HostName UserName CommandLine Resource Severity Category Technique

[T1191 - Execution/Defense Evasion - cmstp]
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = */15 * * * *
description = Adversaries may supply CMSTP.exe with INF files infected with malicious commands.2 Similar to Regsvr32 / ”Squiblydoo”, CMSTP.exe may be abused to load and execute DLLs3 and/or COM scriptlets (SCT) from remote servers.45 This execution may also bypass AppLocker and other whitelisting defenses since CMSTP.exe is a legitimate, signed Microsoft application.\
\
https://attack.mitre.org/wiki/Technique/T1191
display.events.fields = ["host","source","sourcetype","EventCode"]
display.events.type = raw
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new index=wineventlog cmstp.exe NewProcessName="C:\\Windows\\System32\\cmstp.exe"\
| rex field=CommandLine "cmstp.exe\s(?<Resource>.*)"\
| eval Severity=if(match(CommandLine,"http"),"Critical","Low") \
| eval Category="Execution"\
| eval Technique="T1191"\
| table _time HostName UserName CommandLine Resource Severity Category Technique
